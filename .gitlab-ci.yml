### Prototype build jobs ###
.build_script: &build_script
    - mkdir -p build/
    - cd build/
    - echo $CMAKE_CMD
    - $CMAKE_CMD
    - ninja

.test_script: &test_script
    - ctest -V

.build:
    variables:
        EXTRA_CMAKE_FLAGS: ""
    before_script:
        - export CMAKE_CMD="cmake -GNinja $EXTRA_CMAKE_FLAGS .."
    script:
        - *build_script

.build_and_test:
    extends: .build
    script:
        - *build_script
        - *test_script

### Tests ###
test:debian:10:
    extends: .build_and_test
    stage: test
    needs: []
    image: volcart/vcbuilder-debian:10_v1.base
    variables:
        EXTRA_CMAKE_FLAGS: "-DSMGL_BUILD_TESTS=ON"
    tags:
        - docker

test:ubuntu:21.04:
    extends: .build_and_test
    stage: test
    needs: []
    image: ubuntu:21.04
    variables:
        EXTRA_CMAKE_FLAGS: "-DSMGL_BUILD_TESTS=ON"
    before_script:
        - apt update
        - apt install -y build-essential cmake ninja-build git
        - export CMAKE_CMD="cmake -GNinja $EXTRA_CMAKE_FLAGS .."
    tags:
        - docker

### Docs ###
pages:
    stage: deploy
    needs: []
    image: debian:buster-backports
    before_script:
        - apt-get update
        - apt-get install -y build-essential doxygen graphviz texlive ghostscript
        - apt-get -t buster-backports install -y cmake
    script:
        - mkdir -p build/
        - mkdir -p public/
        - cmake -S . -B build/ -DSMGL_BUILD_DOCS=ON
        - cmake --build build/ --target docs
        - mv build/docs/html/ public/docs/
    artifacts:
        paths:
            - public
    tags:
        - docker
    only:
        - dev